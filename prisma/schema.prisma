// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  name           String
  age            Int
  bio            String
  email          String @unique
  password       String
  profile        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  likesGiven     Like[] @relation("LikesGiven")
  likesReceived  Like[] @relation("LikesReceived")
  matchesA       Match[] @relation("UserAMatches")
  matchesB       Match[] @relation("UserBMatches")
}

model Like {
  id         String   @id @default(uuid())
  client   User     @relation("LikesGiven", fields: [clientId], references: [id])
  clientId String
  user     User     @relation("LikesReceived", fields: [userId], references: [id])
  userId   String
  liked      Boolean
  createdAt  DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@unique([clientId, userId])
}

model Match {
  id        String   @id @default(uuid())
  userA     User     @relation("UserAMatches", fields: [userAId], references: [id])
  userAId   String
  userB     User @relation("UserBMatches", fields: [userBId], references: [id])
  userBId   String
  createdAt DateTime @default(now())
  updatedAt      DateTime @updatedAt
  @@unique([userAId, userBId])
}